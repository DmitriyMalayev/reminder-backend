class EventSerializer
  include FastJsonapi::ObjectSerializer
  attributes :id, :name, :start_time, :end_time, :notes, :calendar
  attribute :calendar_title do |object| 
    object.calendar.title  
  end 
  # belongs_to :calendar   
end


# We use the Fast JSON API gem to create a close approximation to JSON DATA from ruby data ?? It provides a way for us to generate serializer classses for each resource object in our API that is involved in customized JSON rendering. We can use these serializer classes to define the specific attributes we want objects to share or not share, along with things like related object attributes.  The result is that in our controller actions, rather than writing a custom render each time, we write out a serializer for each objectonce and use Fast JSON API to control the way our data is structured. 

#ASIDE: Serializers generated by the Fast JSON API gem have two built-in methods called serializable_hash and serialized_json which return a serialized hash and a JSON string respectively. However, we don't actually need either of these in this example, as to_json will still be called on SightingSerializer.new(sighting) implicitly. As we will see, once our serializers are configured and initialized, we will not need to do any additional work. 